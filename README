sspm is Licensed under GPLv3+: GNU GPL version 3 or later
################################################################


sspm is non-dependency support yet, since we must start somewhere.



The exit issue :
    making the script to exit at any error means that you cannot run a make test
    in the build process because some errors are 'normal' if we can say that
    (for example if certain dependencies are not available yet)
    
    in a graphical terminal you just need to be carefull,
    you can scroll up to check if the process did not encounter an error
    
    the program does not really exit if there is an error
    
    
    better to strip a package at install process
    as a non-privileged user if you enable stripping
    if the package contains a file with non-writable
    rights this will cause an error
    
    
    
sspm is a local package manager does not fetch anything from internet
means you must have downloaded all the necessary source files in a directory
and point "SRC" to that directory



note :
    there are some packages still need to be built manually
    due to characters manipulations issues and others
    like : kbd  and iana-etc
    sometimes you can have basename command warning messages when you install
    a package this does not affect the package neither the system
    
    
    
sspm policy :
        sspm policy is to create less dependencies to the system
        because its supposed to be used from the minimum linux-based environment
        to a full linux-based system.
        So where you can simply type two options with an external tool to resolve the issue
        if there is a pure shell effective solution. that will be used even if its takes 100 lines



_________________________________________________________________________________________________________
section : # dependencies check
............................

if you automatically compile sspm dependencies and you encounter an error,
ensure that we're dealing with the same libraries
because sometimes packages libraries change names on newer versions of the package

here configurations are suitable for suggested versions of packages

a simple adjustment of a library name, adding/removing an option can solve the issue


example:

procps-ng v4.0.0

* line 251        mv -v $DESTDIR/usr/lib/libproc-2.so.* $DESTDIR/lib; [[ $? != 0 ]] && BUILD_STATUS=1
* line 252        SLINK0="$(find $DESTDIR -name libproc-2.so -type l -print | head -1)"
* line 253        SLINK1="$(find $DESTDIR -name libproc-2.so.* -type l -print)"


procps-ng v4.0.2

* line 251       mv -v $DESTDIR/usr/lib/libproc2.so.* $DESTDIR/lib; [[ $? != 0 ]] && BUILD_STATUS=1
* line 252       SLINK0="$(find $DESTDIR -name libproc2.so -type l -print | head -1)"
* line 253       SLINK1="$(find $DESTDIR -name libproc2.so.* -type l -print)"
_________________________________________________________________________________________________________
        
        
        
        
        

############################################################################
the project was born in 2020
not less than : 362 days of work
your opinions: will determine if I must continue || exit   
############################################################################







SORRY FOR MY ENGLISH
I USED ALL THE CPU OF MY BRAIN TO PRODUCE THE BEST POSSIBLE TRANSLATION I CAN
